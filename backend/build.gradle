/*
 * This file was generated by the Gradle 'init' task.
 */

plugins {
    id 'java'
    id 'maven-publish'
    id "io.freefair.lombok" version "6.5.1"
}

repositories {
    mavenLocal()
    maven {
        url = uri('https://repo.maven.apache.org/maven2/')
    }
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb:2.6.1'
    implementation 'org.springframework.boot:spring-boot-starter-web:2.6.1'
    implementation 'io.awspring.cloud:spring-cloud-aws-context:2.4.1'
    implementation 'io.awspring.cloud:spring-cloud-aws-autoconfigure:2.4.1'
    implementation 'org.springframework.boot:spring-boot-starter-validation:2.6.1'
    implementation 'org.jetbrains:annotations:RELEASE'
    implementation 'org.springframework.boot:spring-boot-starter-mail:2.6.1'
    implementation 'org.springframework.boot:spring-boot-starter-security:2.6.1'
    implementation 'org.jetbrains:annotations:13.0'
    implementation 'com.cloudinary:cloudinary-core:1.33.0'
    implementation 'com.cloudinary:cloudinary-taglib:1.33.0'
    implementation 'com.cloudinary:cloudinary-http44:1.33.0'
    implementation 'io.jsonwebtoken:jjwt-api:0.11.2'
    implementation 'io.jsonwebtoken:jjwt-impl:0.11.2', 'io.jsonwebtoken:jjwt-jackson:0.11.2'
    testImplementation 'de.flapdoodle.embed:de.flapdoodle.embed.mongo:3.0.0'
    testImplementation 'org.springframework.boot:spring-boot-starter-test:2.6.1'
    testImplementation 'org.mockito:mockito-core:4.1.0'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
    testImplementation 'org.junit.jupiter:junit-jupiter-engine:5.8.1'
    testImplementation 'org.junit.platform:junit-platform-launcher:1.8.1'
    testImplementation 'com.h2database:h2:1.4.200'
    testImplementation 'org.springframework.security:spring-security-test:5.6.0'
}

group = 'com.jelani-ak'
version = '0.0.1-SNAPSHOT'
description = 'backend'
java.sourceCompatibility = JavaVersion.VERSION_17

publishing {
    publications {
        maven(MavenPublication) {
            from(components.java)
        }
    }
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

test {
    useJUnitPlatform()
}